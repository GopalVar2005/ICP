class Solution {
    public int[] searchRange(int[] nums, int target) {
        int first=search(nums, target, true);
        if(first==-1)
        {
            return new int[]{-1, -1};
        }
        return new int[]{first, search(nums, target, false)};
    }
    public int search(int[] nums, int target, boolean first)
    {
        int lo=0;
        int hi=nums.length-1;
        int ans=-1;
        while(lo<=hi)
        {
            int mid=lo+(hi-lo)/2;
            if(nums[mid]==target)
            {
                ans=mid;
                if(first)
                {
                    hi=mid-1;
                }
                else
                {
                    lo=mid+1;
                }
            }
            else if(nums[mid]<target)
            {
                lo=mid+1;
            }
            else
            {
                hi=mid-1;;
            }
        }
        return ans;
    }
}
TC-O(logN)
SC-O(1)

Example 1:
Input: nums = [5,7,7,8,8,10], target = 8
Output: [3,4]

Example 2:
Input: nums = [5,7,7,8,8,10], target = 6
Output: [-1,-1]

Example 3:
Input: nums = [], target = 0
Output: [-1,-1]
